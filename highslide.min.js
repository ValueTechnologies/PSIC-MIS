var hs, HsExpander;
hs || (hs = {
    lang: {
        cssDirection: "ltr",
        loadingText: "Loading...",
        loadingTitle: "Click to cancel",
        focusTitle: "Click to bring to front",
        fullExpandTitle: "Expand to actual size (f)",
        creditsText: "",
        creditsTitle: "",
        previousText: "Previous",
        nextText: "Next",
        moveText: "Move",
        closeText: "Close",
        closeTitle: "Close (esc)",
        resizeTitle: "Resize",
        playText: "Play",
        playTitle: "Play slideshow (spacebar)",
        pauseText: "Pause",
        pauseTitle: "Pause slideshow (spacebar)",
        previousTitle: "Previous (arrow left)",
        nextTitle: "Next (arrow right)",
        moveTitle: "Move",
        fullExpandText: "1:1",
        number: "Image %1 of %2",
        restoreTitle: "Click to close image, click and drag to move. Use arrow keys for next and previous."
    },
    graphicsDir: "highslide/graphics/",
    expandCursor: "srch.png",
    restoreCursor: "srch.png",
    expandDuration: 250,
    restoreDuration: 250,
    marginLeft: 15,
    marginRight: 15,
    marginTop: 15,
    marginBottom: 15,
    zIndexCounter: 1001,
    loadingOpacity: .75,
    allowMultipleInstances: !0,
    numberOfImagesToPreload: 5,
    outlineWhileAnimating: 2,
    outlineStartOffset: 3,
    padToMinWidth: !1,
    fullExpandPosition: "bottom right",
    fullExpandOpacity: 1,
    showCredits: !0,
    creditsHref: "http://highslide.com/",
    creditsTarget: "_self",
    enableKeyListener: !0,
    openerTagNames: ["a"],
    transitions: [],
    transitionDuration: 250,
    dimmingOpacity: 0,
    dimmingDuration: 50,
    anchor: "auto",
    align: "center",
    targetX: null,
    targetY: null,
    dragByHeading: !0,
    minWidth: 200,
    minHeight: 200,
    allowSizeReduction: !0,
    outlineType: "drop-shadow",
    skin: {
        controls: '<div class="highslide-controls"><ul><li class="highslide-previous"><a href="#" title="{hs.lang.previousTitle}"><span>{hs.lang.previousText}<\/span><\/a><\/li><li class="highslide-play"><a href="#" title="{hs.lang.playTitle}"><span>{hs.lang.playText}<\/span><\/a><\/li><li class="highslide-pause"><a href="#" title="{hs.lang.pauseTitle}"><span>{hs.lang.pauseText}<\/span><\/a><\/li><li class="highslide-next"><a href="#" title="{hs.lang.nextTitle}"><span>{hs.lang.nextText}<\/span><\/a><\/li><li class="highslide-move"><a href="#" title="{hs.lang.moveTitle}"><span>{hs.lang.moveText}<\/span><\/a><\/li><li class="highslide-full-expand"><a href="#" title="{hs.lang.fullExpandTitle}"><span>{hs.lang.fullExpandText}<\/span><\/a><\/li><li class="highslide-close"><a href="#" title="{hs.lang.closeTitle}" ><span>{hs.lang.closeText}<\/span><\/a><\/li><\/ul><\/div>'
    },
    preloadTheseImages: [],
    continuePreloading: !0,
    expanders: [],
    overrides: ["allowSizeReduction", "useBox", "anchor", "align", "targetX", "targetY", "outlineType", "outlineWhileAnimating", "captionId", "captionText", "captionEval", "captionOverlay", "headingId", "headingText", "headingEval", "headingOverlay", "creditsPosition", "dragByHeading", "autoplay", "numberPosition", "transitions", "dimmingOpacity", "width", "height", "wrapperClassName", "minWidth", "minHeight", "maxWidth", "maxHeight", "pageOrigin", "slideshowGroup", "easing", "easingClose", "fadeInOut", "src"],
    overlays: [],
    idCounter: 0,
    oPos: {
        x: ["leftpanel", "left", "center", "right", "rightpanel"],
        y: ["above", "top", "middle", "bottom", "below"]
    },
    mouse: {},
    headingOverlay: {},
    captionOverlay: {},
    timers: [],
    slideshows: [],
    pendingOutlines: {},
    clones: {},
    onReady: [],
    uaVersion: /Trident\/4\.0/.test(navigator.userAgent) ? 8 : parseFloat((navigator.userAgent.toLowerCase().match(/.+(?:rv|it|ra|ie)[\/: ]([\d.]+)/) || [0, "0"])[1]),
    ie: document.all && !window.opera,
    safari: /Safari/.test(navigator.userAgent),
    geckoMac: /Macintosh.+rv:1\.[0-8].+Gecko/.test(navigator.userAgent),
    $: function (n) {
        if (n) return document.getElementById(n)
    },
    push: function (n, t) {
        n[n.length] = t
    },
    createElement: function (n, t, i, r, u) {
        var f = document.createElement(n);
        return t && hs.extend(f, t), u && hs.setStyles(f, {
            padding: 0,
            border: "none",
            margin: 0
        }), i && hs.setStyles(f, i), r && r.appendChild(f), f
    },
    extend: function (n, t) {
        for (var i in t) n[i] = t[i];
        return n
    },
    setStyles: function (n, t) {
        for (var i in t) hs.ieLt9 && i == "opacity" ? t[i] > .99 ? n.style.removeAttribute("filter") : n.style.filter = "alpha(opacity=" + t[i] * 100 + ")" : n.style[i] = t[i]
    },
    animate: function (n, t, i) {
        var f, e, o, u, r, s;
        (typeof i != "object" || i === null) && (u = arguments, i = {
            duration: u[2],
            easing: u[3],
            complete: u[4]
        });
        typeof i.duration != "number" && (i.duration = 250);
        i.easing = Math[i.easing] || Math.easeInQuad;
        i.curAnim = hs.extend({}, t);
        for (r in t) s = new hs.fx(n, i, r), f = parseFloat(hs.css(n, r)) || 0, e = parseFloat(t[r]), o = r != "opacity" ? "px" : "", s.custom(f, e, o)
    },
    css: function (n, t) {
        if (n.style[t]) return n.style[t];
        if (document.defaultView) return document.defaultView.getComputedStyle(n, null).getPropertyValue(t);
        t == "opacity" && (t = "filter");
        var i = n.currentStyle[t.replace(/\-(\w)/g, function (n, t) {
            return t.toUpperCase()
        })];
        return t == "filter" && (i = i.replace(/alpha\(opacity=([0-9]+)\)/, function (n, t) {
            return t / 100
        })), i === "" ? 1 : i
    },
    getPageSize: function () {
        var n = document,
            f = window,
            t = n.compatMode && n.compatMode != "BackCompat" ? n.documentElement : n.body,
            i = hs.ie && (hs.uaVersion < 9 || typeof pageXOffset == "undefined"),
            r = i ? t.clientWidth : n.documentElement.clientWidth || self.innerWidth,
            u = i ? t.clientHeight : self.innerHeight;
        return hs.page = {
            width: r,
            height: u,
            scrollLeft: i ? t.scrollLeft : pageXOffset,
            scrollTop: i ? t.scrollTop : pageYOffset
        }, hs.page
    },
    getPosition: function (n) {
        for (var t = {
            x: n.offsetLeft,
            y: n.offsetTop
        }; n.offsetParent;) n = n.offsetParent, t.x += n.offsetLeft, t.y += n.offsetTop, n != document.body && n != document.documentElement && (t.x -= n.scrollLeft, t.y -= n.scrollTop);
        return t
    },
    expand: function (n, t, i) {
        if (n || (n = hs.createElement("a", null, {
            display: "none"
        }, hs.container)), typeof n.getParams == "function") return t;
        try {
            return new hs.Expander(n, t, i), !1
        } catch (r) {
            return !0
        }
    },
    getElementByClass: function (n, t, i) {
        for (var u = n.getElementsByTagName(t), r = 0; r < u.length; r++)
            if (new RegExp(i).test(u[r].className)) return u[r];
        return null
    },
    replaceLang: function (n) {
        var r, t, u, i;
        if (n = n.replace(/\s/g, " "), r = /{hs\.lang\.([^}]+)\}/g, t = n.match(r), t)
            for (i = 0; i < t.length; i++) u = t[i].replace(r, "$1"), typeof hs.lang[u] != "undefined" && (n = n.replace(t[i], hs.lang[u]));
        return n
    },
    focusTopmost: function () {
        for (var f = 0, i = -1, r = hs.expanders, u, n, t = 0; t < r.length; t++) u = r[t], u && (n = u.wrapper.style.zIndex, n && n > f && (f = n, i = t));
        i == -1 ? hs.focusKey = -1 : r[i].focus()
    },
    getParam: function (n, t) {
        n.getParams = n.onclick;
        var i = n.getParams ? n.getParams() : null;
        return n.getParams = null, i && typeof i[t] != "undefined" ? i[t] : typeof hs[t] != "undefined" ? hs[t] : null
    },
    getSrc: function (n) {
        var t = hs.getParam(n, "src");
        return t ? t : n.href
    },
    getNode: function (n) {
        var i = hs.$(n),
            t = hs.clones[n];
        return !i && !t ? null : t ? t.cloneNode(!0) : (t = i.cloneNode(!0), t.id = "", hs.clones[n] = t, i)
    },
    discardElement: function (n) {
        n && hs.garbageBin.appendChild(n);
        hs.garbageBin.innerHTML = ""
    },
    dim: function (n) {
        var t, i;
        if (!hs.dimmer && (i = !0, hs.dimmer = hs.createElement("div", {
            className: "highslide-dimming highslide-viewport-size",
            owner: "",
            onclick: function () {
                hs.close()
        }
        }, {
            visibility: "visible",
            opacity: 0
        }, hs.container, !0), /(Android|iPad|iPhone|iPod)/.test(navigator.userAgent))) {
            t = document.body;

            function r() {
                hs.setStyles(hs.dimmer, {
                    width: t.scrollWidth + "px",
                    height: t.scrollHeight + "px"
                })
            }
            r();
            hs.addEventListener(window, "resize", r)
        }
        hs.dimmer.style.display = "";
        i = hs.dimmer.owner == "";
        hs.dimmer.owner += "|" + n.key;
        i && (hs.geckoMac && hs.dimmingGeckoFix ? hs.setStyles(hs.dimmer, {
            background: "url(" + hs.graphicsDir + "geckodimmer.png)",
            opacity: 1
        }) : hs.animate(hs.dimmer, {
            opacity: n.dimmingOpacity
        }, hs.dimmingDuration))
    },
    undim: function (n) {
        hs.dimmer && ((typeof n != "undefined" && (hs.dimmer.owner = hs.dimmer.owner.replace("|" + n, "")), typeof n != "undefined" && hs.dimmer.owner != "" || hs.upcoming && hs.getParam(hs.upcoming, "dimmingOpacity")) || (hs.geckoMac && hs.dimmingGeckoFix ? hs.dimmer.style.display = "none" : hs.animate(hs.dimmer, {
            opacity: 0
        }, hs.dimmingDuration, null, function () {
            hs.dimmer.style.display = "none"
        })))
    },
    transit: function (n, t) {
        var i = t || hs.getExpander();
        if (t = i, hs.upcoming) return !1;
        hs.last = i;
        hs.removeEventListener(document, window.opera ? "keypress" : "keydown", hs.keyHandler);
        try {
            hs.upcoming = n;
            n.onclick()
        } catch (r) {
            hs.last = hs.upcoming = null
        }
        try {
            n && t.transitions[1] == "crossfade" || t.close()
        } catch (r) { }
        return !1
    },
    previousOrNext: function (n, t) {
        var i = hs.getExpander(n);
        return i ? hs.transit(i.getAdjacentAnchor(t), i) : !1
    },
    previous: function (n) {
        return hs.previousOrNext(n, -1)
    },
    next: function (n) {
        return hs.previousOrNext(n, 1)
    },
    keyHandler: function (n) {
        if (n || (n = window.event), n.target || (n.target = n.srcElement), typeof n.target.form != "undefined") return !0;
        var t = hs.getExpander(),
            i = null;
        switch (n.keyCode) {
            case 70:
                return t && t.doFullExpand(), !0;
            case 32:
                i = 2;
                break;
            case 34:
            case 39:
            case 40:
                i = 1;
                break;
            case 8:
            case 33:
            case 37:
            case 38:
                i = -1;
                break;
            case 27:
            case 13:
                i = 0
        }
        if (i !== null) {
            if (i != 2 && hs.removeEventListener(document, window.opera ? "keypress" : "keydown", hs.keyHandler), !hs.enableKeyListener) return !0;
            if (n.preventDefault ? n.preventDefault() : n.returnValue = !1, t) return i == 0 ? t.close() : i == 2 ? t.slideshow && t.slideshow.hitSpace() : (t.slideshow && t.slideshow.pause(), hs.previousOrNext(t.key, i)), !1
        }
        return !0
    },
    registerOverlay: function (n) {
        hs.push(hs.overlays, hs.extend(n, {
            hsId: "hsId" + hs.idCounter++
        }))
    },
    addSlideshow: function (n) {
        var r = n.slideshowGroup,
            t, i, u;
        if (typeof r == "object")
            for (t = 0; t < r.length; t++) {
                i = {};
                for (u in n) i[u] = n[u];
                i.slideshowGroup = r[t];
                hs.push(hs.slideshows, i)
            } else hs.push(hs.slideshows, n)
    },
    getWrapperKey: function (n, t) {
        for (var f = /^highslide-wrapper-([0-9]+)$/, r, u, i = n; i.parentNode;) {
            if (i.hsKey !== undefined) return i.hsKey;
            if (i.id && f.test(i.id)) return i.id.replace(f, "$1");
            i = i.parentNode
        }
        if (!t)
            for (i = n; i.parentNode;) {
                if (i.tagName && hs.isHsAnchor(i))
                    for (r = 0; r < hs.expanders.length; r++)
                        if (u = hs.expanders[r], u && u.a == i) return r;
                i = i.parentNode
            }
        return null
    },
    getExpander: function (n, t) {
        return typeof n == "undefined" ? hs.expanders[hs.focusKey] || null : typeof n == "number" ? hs.expanders[n] || null : (typeof n == "string" && (n = hs.$(n)), hs.expanders[hs.getWrapperKey(n, t)] || null)
    },
    isHsAnchor: function (n) {
        return n.onclick && n.onclick.toString().replace(/\s/g, " ").match(/hs.(htmlE|e)xpand/)
    },
    reOrder: function () {
        for (var n = 0; n < hs.expanders.length; n++) hs.expanders[n] && hs.expanders[n].isExpanded && hs.focusTopmost()
    },
    mouseClickHandler: function (n) {
        var i, t, u, r;
        if (n || (n = window.event), n.button > 1) return !0;
        for (n.target || (n.target = n.srcElement), i = n.target; i.parentNode && !/highslide-(image|move|html|resize)/.test(i.className) ;) i = i.parentNode;
        if (t = hs.getExpander(i), t && (t.isClosing || !t.isExpanded)) return !0;
        if (t && n.type == "mousedown") {
            if (n.target.form) return !0;
            if (u = i.className.match(/highslide-(image|move|resize)/), u) return hs.dragArgs = {
                exp: t,
                type: u[1],
                left: t.x.pos,
                width: t.x.size,
                top: t.y.pos,
                height: t.y.size,
                clickX: n.clientX,
                clickY: n.clientY
            }, hs.addEventListener(document, "mousemove", hs.dragHandler), n.preventDefault && n.preventDefault(), /highslide-(image|html)-blur/.test(t.content.className) && (t.focus(), hs.hasFocused = !0), !1
        } else n.type == "mouseup" && (hs.removeEventListener(document, "mousemove", hs.dragHandler), hs.dragArgs ? (hs.styleRestoreCursor && hs.dragArgs.type == "image" && (hs.dragArgs.exp.content.style.cursor = hs.styleRestoreCursor), r = hs.dragArgs.hasDragged, r || hs.hasFocused || /(move|resize)/.test(hs.dragArgs.type) ? (r || !r && hs.hasHtmlExpanders) && hs.dragArgs.exp.doShowHide("hidden") : t.close(), hs.hasFocused = !1, hs.dragArgs = null) : /highslide-image-blur/.test(i.className) && (i.style.cursor = hs.styleRestoreCursor));
        return !1
    },
    dragHandler: function (n) {
        var t, i, r;
        return hs.dragArgs ? (n || (n = window.event), t = hs.dragArgs, i = t.exp, t.dX = n.clientX - t.clickX, t.dY = n.clientY - t.clickY, r = Math.sqrt(Math.pow(t.dX, 2) + Math.pow(t.dY, 2)), t.hasDragged || (t.hasDragged = t.type != "image" && r > 0 || r > (hs.dragSensitivity || 5)), t.hasDragged && n.clientX > 5 && n.clientY > 5 && (t.type == "resize" ? i.resize(t) : (i.moveTo(t.left + t.dX, t.top + t.dY), t.type == "image" && (i.content.style.cursor = "move"))), !1) : !0
    },
    wrapperMouseHandler: function (n) {
        var i, t, r;
        try {
            if (n || (n = window.event), i = /mouseover/i.test(n.type), n.target || (n.target = n.srcElement), n.relatedTarget || (n.relatedTarget = i ? n.fromElement : n.toElement), t = hs.getExpander(n.target), !t.isExpanded) return;
            if (!t || !n.relatedTarget || hs.getExpander(n.relatedTarget, !0) == t || hs.dragArgs) return;
            for (r = 0; r < t.overlays.length; r++) (function () {
                var n = hs.$("hsId" + t.overlays[r]);
                n && n.hideOnMouseOut && (i && hs.setStyles(n, {
                    visibility: "visible",
                    display: ""
                }), hs.animate(n, {
                    opacity: i ? n.opacity : 0
                }, n.dur))
            })()
        } catch (n) { }
    },
    addEventListener: function (n, t, i) {
        n == document && t == "ready" && hs.push(hs.onReady, i);
        try {
            n.addEventListener(t, i, !1)
        } catch (r) {
            try {
                n.detachEvent("on" + t, i);
                n.attachEvent("on" + t, i)
            } catch (r) {
                n["on" + t] = i
            }
        }
    },
    removeEventListener: function (n, t, i) {
        try {
            n.removeEventListener(t, i, !1)
        } catch (r) {
            try {
                n.detachEvent("on" + t, i)
            } catch (r) {
                n["on" + t] = null
            }
        }
    },
    preloadFullImage: function (n) {
        if (hs.continuePreloading && hs.preloadTheseImages[n] && hs.preloadTheseImages[n] != "undefined") {
            var t = document.createElement("img");
            t.onload = function () {
                t = null;
                hs.preloadFullImage(n + 1)
            };
            t.src = hs.preloadTheseImages[n]
        }
    },
    preloadImages: function (n) {
        var i, t, r;
        for (n && typeof n != "object" && (hs.numberOfImagesToPreload = n), i = hs.getAnchors(), t = 0; t < i.images.length && t < hs.numberOfImagesToPreload; t++) hs.push(hs.preloadTheseImages, hs.getSrc(i.images[t]));
        hs.outlineType ? new hs.Outline(hs.outlineType, function () {
            hs.preloadFullImage(0)
        }) : hs.preloadFullImage(0);
        hs.restoreCursor && (r = hs.createElement("img", {
            src: hs.graphicsDir + hs.restoreCursor
        }))
    },
    init: function () {
        if (!hs.container) {
            hs.ieLt7 = hs.ie && hs.uaVersion < 7;
            hs.ieLt9 = hs.ie && hs.uaVersion < 9;
            hs.getPageSize();
            for (var n in hs.langDefaults) typeof hs[n] != "undefined" ? hs.lang[n] = hs[n] : typeof hs.lang[n] == "undefined" && typeof hs.langDefaults[n] != "undefined" && (hs.lang[n] = hs.langDefaults[n]);
            hs.container = hs.createElement("div", {
                className: "highslide-container"
            }, {
                position: "absolute",
                left: 0,
                top: 0,
                width: "100%",
                zIndex: hs.zIndexCounter,
                direction: "ltr"
            }, document.body, !0);
            hs.loading = hs.createElement("a", {
                className: "highslide-loading",
                title: hs.lang.loadingTitle,
                innerHTML: hs.lang.loadingText,
                href: "javascript:;"
            }, {
                position: "absolute",
                top: "-9999px",
                opacity: hs.loadingOpacity,
                zIndex: 1
            }, hs.container);
            hs.garbageBin = hs.createElement("div", null, {
                display: "none"
            }, hs.container);
            hs.viewport = hs.createElement("div", {
                className: "highslide-viewport highslide-viewport-size"
            }, {
                visibility: hs.safari && hs.uaVersion < 525 ? "visible" : "hidden"
            }, hs.container, 1);
            Math.linearTween = function (n, t, i, r) {
                return i * n / r + t
            };
            Math.easeInQuad = function (n, t, i, r) {
                return i * (n /= r) * n + t
            };
            Math.easeOutQuad = function (n, t, i, r) {
                return -i * (n /= r) * (n - 2) + t
            };
            hs.hideSelects = hs.ieLt7;
            hs.hideIframes = window.opera && hs.uaVersion < 9 || navigator.vendor == "KDE" || hs.ieLt7 && hs.uaVersion < 5.5
        }
    },
    ready: function () {
        if (!hs.isReady) {
            hs.isReady = !0;
            for (var n = 0; n < hs.onReady.length; n++) hs.onReady[n]()
        }
    },
    updateAnchors: function () {
        for (var i, r, n, u, o = [], s = [], t = {}, f, e = 0; e < hs.openerTagNames.length; e++)
            for (u = document.getElementsByTagName(hs.openerTagNames[e]), i = 0; i < u.length; i++) n = u[i], f = hs.isHsAnchor(n), f && (hs.push(o, n), f[0] == "hs.expand" && hs.push(s, n), r = hs.getParam(n, "slideshowGroup") || "none", t[r] || (t[r] = []), hs.push(t[r], n));
        return hs.anchors = {
            all: o,
            groups: t,
            images: s
        }, hs.anchors
    },
    getAnchors: function () {
        return hs.anchors || hs.updateAnchors()
    },
    close: function (n) {
        var t = hs.getExpander(n);
        return t && t.close(), !1
    }
}, hs.fx = function (n, t, i) {
    this.options = t;
    this.elem = n;
    this.prop = i;
    t.orig || (t.orig = {})
}, hs.fx.prototype = {
    update: function () {
        (hs.fx.step[this.prop] || hs.fx.step._default)(this);
        this.options.step && this.options.step.call(this.elem, this.now, this)
    },
    custom: function (n, t, i) {
        function r(n) {
            return u.step(n)
        }
        this.startTime = (new Date).getTime();
        this.start = n;
        this.end = t;
        this.unit = i;
        this.now = this.start;
        this.pos = this.state = 0;
        var u = this;
        r.elem = this.elem;
        r() && hs.timers.push(r) == 1 && (hs.timerId = setInterval(function () {
            for (var n = hs.timers, t = 0; t < n.length; t++) n[t]() || n.splice(t--, 1);
            n.length || clearInterval(hs.timerId)
        }, 13))
    },
    step: function (n) {
        var r = (new Date).getTime(),
            t, u, i;
        if (n || r >= this.options.duration + this.startTime) {
            this.now = this.end;
            this.pos = this.state = 1;
            this.update();
            this.options.curAnim[this.prop] = !0;
            t = !0;
            for (u in this.options.curAnim) this.options.curAnim[u] !== !0 && (t = !1);
            return t && this.options.complete && this.options.complete.call(this.elem), !1
        }
        return i = r - this.startTime, this.state = i / this.options.duration, this.pos = this.options.easing(i, 0, 1, this.options.duration), this.now = this.start + (this.end - this.start) * this.pos, this.update(), !0
    }
}, hs.extend(hs.fx, {
    step: {
        opacity: function (n) {
            hs.setStyles(n.elem, {
                opacity: n.now
            })
        },
        _default: function (n) {
            try {
                n.elem.style && n.elem.style[n.prop] != null ? n.elem.style[n.prop] = n.now + n.unit : n.elem[n.prop] = n.now
            } catch (t) { }
        }
    }
}), hs.Outline = function (n, t) {
    var e, r, u, i, f;
    if (this.onLoad = t, this.outlineType = n, e = hs.uaVersion, this.hasAlphaImageLoader = hs.ie && hs.uaVersion < 7, !n) {
        t && t();
        return
    }
    for (hs.init(), this.table = hs.createElement("table", {
        cellSpacing: 0
    }, {
        visibility: "hidden",
        position: "absolute",
        borderCollapse: "collapse",
        width: 0
    }, hs.container, !0), u = hs.createElement("tbody", null, null, this.table, 1), this.td = [], i = 0; i <= 8; i++) i % 3 == 0 && (r = hs.createElement("tr", null, {
        height: "auto"
    }, u, !0)), this.td[i] = hs.createElement("td", null, null, r, !0), f = i != 4 ? {
        lineHeight: 0,
        fontSize: 0
    } : {
        position: "relative"
    }, hs.setStyles(this.td[i], f);
    this.td[4].className = n + " highslide-outline";
    this.preloadGraphic()
}, hs.Outline.prototype = {
    preloadGraphic: function () {
        var t = hs.graphicsDir + (hs.outlinesDir || "outlines/") + this.outlineType + ".png",
            i = hs.safari && hs.uaVersion < 525 ? hs.container : null,
            n;
        this.graphic = hs.createElement("img", null, {
            position: "absolute",
            top: "-9999px"
        }, i, !0);
        n = this;
        this.graphic.onload = function () {
            n.onGraphicLoad()
        };
        this.graphic.src = t
    },
    onGraphicLoad: function () {
        for (var u, f, t = this.offset = this.graphic.width / 4, i = [
            [0, 0],
            [0, -4],
            [-2, 0],
            [0, -8], 0, [-2, -8],
            [0, -2],
            [0, -6],
            [-2, -2]
        ], r = {
            height: 2 * t + "px",
            width: 2 * t + "px"
        }, n = 0; n <= 8; n++) i[n] && (this.hasAlphaImageLoader ? (u = n == 1 || n == 7 ? "100%" : this.graphic.width + "px", f = hs.createElement("div", null, {
            width: "100%",
            height: "100%",
            position: "relative",
            overflow: "hidden"
        }, this.td[n], !0), hs.createElement("div", null, {
            filter: "progid:DXImageTransform.Microsoft.AlphaImageLoader(sizingMethod=scale, src='" + this.graphic.src + "')",
            position: "absolute",
            width: u,
            height: this.graphic.height + "px",
            left: i[n][0] * t + "px",
            top: i[n][1] * t + "px"
        }, f, !0)) : hs.setStyles(this.td[n], {
            background: "url(" + this.graphic.src + ") " + i[n][0] * t + "px " + i[n][1] * t + "px"
        }), window.opera && (n == 3 || n == 5) && hs.createElement("div", null, r, this.td[n], !0), hs.setStyles(this.td[n], r));
        this.graphic = null;
        hs.pendingOutlines[this.outlineType] && hs.pendingOutlines[this.outlineType].destroy();
        hs.pendingOutlines[this.outlineType] = this;
        this.onLoad && this.onLoad()
    },
    setPosition: function (n, t, i) {
        var r = this.exp,
            u = r.wrapper.style,
            t = t || 0,
            n = n || {
                x: r.x.pos + t,
                y: r.y.pos + t,
                w: r.x.get("wsize") - 2 * t,
                h: r.y.get("wsize") - 2 * t
            };
        i && (this.table.style.visibility = n.h >= 4 * this.offset ? "visible" : "hidden");
        hs.setStyles(this.table, {
            left: n.x - this.offset + "px",
            top: n.y - this.offset + "px",
            width: n.w + 2 * this.offset + "px"
        });
        n.w -= 2 * this.offset;
        n.h -= 2 * this.offset;
        hs.setStyles(this.td[4], {
            width: n.w >= 0 ? n.w + "px" : 0,
            height: n.h >= 0 ? n.h + "px" : 0
        });
        this.hasAlphaImageLoader && (this.td[3].style.height = this.td[5].style.height = this.td[4].style.height)
    },
    destroy: function (n) {
        n ? this.table.style.visibility = "hidden" : hs.discardElement(this.table)
    }
}, hs.Dimension = function (n, t) {
    this.exp = n;
    this.dim = t;
    this.ucwh = t == "x" ? "Width" : "Height";
    this.wh = this.ucwh.toLowerCase();
    this.uclt = t == "x" ? "Left" : "Top";
    this.lt = this.uclt.toLowerCase();
    this.ucrb = t == "x" ? "Right" : "Bottom";
    this.rb = this.ucrb.toLowerCase();
    this.p1 = this.p2 = 0
}, hs.Dimension.prototype = {
    get: function (n) {
        switch (n) {
            case "loadingPos":
                return this.tpos + this.tb + (this.t - hs.loading["offset" + this.ucwh]) / 2;
            case "loadingPosXfade":
                return this.pos + this.cb + this.p1 + (this.size - hs.loading["offset" + this.ucwh]) / 2;
            case "wsize":
                return this.size + 2 * this.cb + this.p1 + this.p2;
            case "fitsize":
                return this.clientSize - this.marginMin - this.marginMax;
            case "maxsize":
                return this.get("fitsize") - 2 * this.cb - this.p1 - this.p2;
            case "opos":
                return this.pos - (this.exp.outline ? this.exp.outline.offset : 0);
            case "osize":
                return this.get("wsize") + (this.exp.outline ? 2 * this.exp.outline.offset : 0);
            case "imgPad":
                return this.imgSize ? Math.round((this.size - this.imgSize) / 2) : 0
        }
    },
    calcBorders: function () {
        this.cb = (this.exp.content["offset" + this.ucwh] - this.t) / 2;
        this.marginMax = hs["margin" + this.ucrb]
    },
    calcThumb: function () {
        this.t = this.exp.el[this.wh] ? parseInt(this.exp.el[this.wh]) : this.exp.el["offset" + this.ucwh];
        this.tpos = this.exp.tpos[this.dim];
        this.tb = (this.exp.el["offset" + this.ucwh] - this.t) / 2;
        (this.tpos == 0 || this.tpos == -1) && (this.tpos = hs.page[this.wh] / 2 + hs.page["scroll" + this.uclt])
    },
    calcExpanded: function () {
        var n = this.exp;
        this.justify = "auto";
        n.align == "center" ? this.justify = "center" : new RegExp(this.lt).test(n.anchor) ? this.justify = null : new RegExp(this.rb).test(n.anchor) && (this.justify = "max");
        this.pos = this.tpos - this.cb + this.tb;
        this.maxHeight && this.dim == "x" && (n.maxWidth = Math.min(n.maxWidth || this.full, n.maxHeight * this.full / n.y.full));
        this.size = Math.min(this.full, n["max" + this.ucwh] || this.full);
        this.minSize = n.allowSizeReduction ? Math.min(n["min" + this.ucwh], this.full) : this.full;
        n.isImage && n.useBox && (this.size = n[this.wh], this.imgSize = this.full);
        this.dim == "x" && hs.padToMinWidth && (this.minSize = n.minWidth);
        this.target = n["target" + this.dim.toUpperCase()];
        this.marginMin = hs["margin" + this.uclt];
        this.scroll = hs.page["scroll" + this.uclt];
        this.clientSize = hs.page[this.wh]
    },
    setSize: function (n) {
        var t = this.exp;
        t.isImage && (t.useBox || hs.padToMinWidth) ? (this.imgSize = n, this.size = Math.max(this.size, this.imgSize), t.content.style[this.lt] = this.get("imgPad") + "px") : this.size = n;
        t.content.style[this.wh] = n + "px";
        t.wrapper.style[this.wh] = this.get("wsize") + "px";
        t.outline && t.outline.setPosition();
        this.dim == "x" && t.overlayBox && t.sizeOverlayBox(!0);
        this.dim == "x" && t.slideshow && t.isImage && (n == this.full ? t.slideshow.disable("full-expand") : t.slideshow.enable("full-expand"))
    },
    setPos: function (n) {
        this.pos = n;
        this.exp.wrapper.style[this.lt] = n + "px";
        this.exp.outline && this.exp.outline.setPosition()
    }
}, hs.Expander = function (n, t, i, r) {
    var o, e, f, u, h, c, s;
    if (document.readyState && hs.ie && !hs.isReady) {
        hs.addEventListener(document, "ready", function () {
            new hs.Expander(n, t, i, r)
        });
        return
    }
    for (this.a = n, this.custom = i, this.contentType = r || "image", this.isImage = !this.isHtml, hs.continuePreloading = !1, this.overlays = [], this.last = hs.last, hs.last = null, hs.init(), o = this.key = hs.expanders.length, u = 0; u < hs.overrides.length; u++) e = hs.overrides[u], this[e] = t && typeof t[e] != "undefined" ? t[e] : hs[e];
    for (this.src || (this.src = n.href), f = t && t.thumbnailId ? hs.$(t.thumbnailId) : n, f = this.thumb = f.getElementsByTagName("img")[0] || f, this.thumbsUserSetId = f.id || n.id, u = 0; u < hs.expanders.length; u++)
        if (hs.expanders[u] && hs.expanders[u].a == n && !(this.last && this.transitions[1] == "crossfade")) return hs.expanders[u].focus(), !1;
    if (!hs.allowSimultaneousLoading)
        for (u = 0; u < hs.expanders.length; u++) hs.expanders[u] && hs.expanders[u].thumb != f && !hs.expanders[u].onLoadStarted && hs.expanders[u].cancelLoading();
    return hs.expanders[o] = this, hs.allowMultipleInstances || hs.upcoming || (hs.expanders[o - 1] && hs.expanders[o - 1].close(), typeof hs.focusKey != "undefined" && hs.expanders[hs.focusKey] && hs.expanders[hs.focusKey].close()), this.el = f, this.tpos = this.pageOrigin || hs.getPosition(f), hs.getPageSize(), h = this.x = new hs.Dimension(this, "x"), h.calcThumb(), c = this.y = new hs.Dimension(this, "y"), c.calcThumb(), this.wrapper = hs.createElement("div", {
        id: "highslide-wrapper-" + this.key,
        className: "highslide-wrapper " + this.wrapperClassName
    }, {
        visibility: "hidden",
        position: "absolute",
        zIndex: hs.zIndexCounter += 2
    }, null, !0), this.wrapper.onmouseover = this.wrapper.onmouseout = hs.wrapperMouseHandler, this.contentType == "image" && this.outlineWhileAnimating == 2 && (this.outlineWhileAnimating = 0), !this.outlineType || this.last && this.isImage && this.transitions[1] == "crossfade" ? this[this.contentType + "Create"]() : hs.pendingOutlines[this.outlineType] ? (this.connectOutline(), this[this.contentType + "Create"]()) : (this.showLoading(), s = this, new hs.Outline(this.outlineType, function () {
        s.connectOutline();
        s[s.contentType + "Create"]()
    })), !0
}, hs.Expander.prototype = {
    error: function (n) {
        hs.debug ? alert("Line " + n.lineNumber + ": " + n.message) : window.location.href = this.src
    },
    connectOutline: function () {
        var n = this.outline = hs.pendingOutlines[this.outlineType];
        n.exp = this;
        n.table.style.zIndex = this.wrapper.style.zIndex - 1;
        hs.pendingOutlines[this.outlineType] = null
    },
    showLoading: function () {
        var t, n;
        if (!this.onLoadStarted && !this.loading) {
            this.loading = hs.loading;
            t = this;
            this.loading.onclick = function () {
                t.cancelLoading()
            };
            var t = this,
                i = this.x.get("loadingPos") + "px",
                r = this.y.get("loadingPos") + "px";
            !n && this.last && this.transitions[1] == "crossfade" && (n = this.last);
            n && (i = n.x.get("loadingPosXfade") + "px", r = n.y.get("loadingPosXfade") + "px", this.loading.style.zIndex = hs.zIndexCounter++);
            setTimeout(function () {
                t.loading && hs.setStyles(t.loading, {
                    left: i,
                    top: r,
                    zIndex: hs.zIndexCounter++
                })
            }, 100)
        }
    },
    imageCreate: function () {
        var t = this,
            n = document.createElement("img");
        this.content = n;
        n.onload = function () {
            hs.expanders[t.key] && t.contentLoaded()
        };
        hs.blockRightClick && (n.oncontextmenu = function () {
            return !1
        });
        n.className = "highslide-image";
        hs.setStyles(n, {
            visibility: "hidden",
            display: "block",
            position: "absolute",
            maxWidth: "9999px",
            zIndex: 3
        });
        n.title = hs.lang.restoreTitle;
        hs.safari && hs.uaVersion < 525 && hs.container.appendChild(n);
        hs.ie && hs.flushImgSize && (n.src = null);
        n.src = this.src;
        this.showLoading()
    },
    contentLoaded: function () {
        var t, i, e, r, o, n, u, f;
        try {
            if (!this.content) return;
            if (this.content.onload = null, this.onLoadStarted) return;
            if (this.onLoadStarted = !0, t = this.x, i = this.y, this.loading && (hs.setStyles(this.loading, {
                top: "-9999px"
            }), this.loading = null), t.full = this.content.width, i.full = this.content.height, hs.setStyles(this.content, {
                width: t.t + "px",
                height: i.t + "px"
            }), this.wrapper.appendChild(this.content), hs.container.appendChild(this.wrapper), t.calcBorders(), i.calcBorders(), hs.setStyles(this.wrapper, {
                left: t.tpos + t.tb - t.cb + "px",
                top: i.tpos + t.tb - i.cb + "px"
            }), this.initSlideshow(), this.getOverlays(), e = t.full / i.full, t.calcExpanded(), this.justify(t), i.calcExpanded(), this.justify(i), this.overlayBox && this.sizeOverlayBox(0, 1), this.allowSizeReduction) {
                if (this.correctRatio(e), r = this.slideshow, r && this.last && r.controls && r.fixedControls) {
                    o = r.overlayOptions.position || "";
                    for (u in hs.oPos)
                        for (f = 0; f < 5; f++) n = this[u], o.match(hs.oPos[u][f]) && (n.pos = this.last[u].pos + (this.last[u].p1 - n.p1) + (this.last[u].size - n.size) * [0, 0, .5, 1, 1][f], r.fixedControls == "fit" && (n.pos + n.size + n.p1 + n.p2 > n.scroll + n.clientSize - n.marginMax && (n.pos = n.scroll + n.clientSize - n.size - n.marginMin - n.marginMax - n.p1 - n.p2), n.pos < n.scroll + n.marginMin && (n.pos = n.scroll + n.marginMin)))
                }
                this.isImage && this.x.full > (this.x.imgSize || this.x.size) && (this.createFullExpand(), this.overlays.length == 1 && this.sizeOverlayBox())
            }
            this.show()
        } catch (s) {
            this.error(s)
        }
    },
    justify: function (n, t) {
        var r, i = n.target,
            f = n == this.x ? "x" : "y",
            e, u, o;
        i && i.match(/ /) && (r = i.split(" "), i = r[0]);
        i && hs.$(i) ? (n.pos = hs.getPosition(hs.$(i))[f], r && r[1] && r[1].match(/^[-]?[0-9]+px$/) && (n.pos += parseInt(r[1])), n.size < n.minSize && (n.size = n.minSize)) : n.justify == "auto" || n.justify == "center" ? (e = !1, u = n.exp.allowSizeReduction, n.pos = n.justify == "center" ? Math.round(n.scroll + (n.clientSize + n.marginMin - n.marginMax - n.get("wsize")) / 2) : Math.round(n.pos - (n.get("wsize") - n.t) / 2), n.pos < n.scroll + n.marginMin && (n.pos = n.scroll + n.marginMin, e = !0), !t && n.size < n.minSize && (n.size = n.minSize, u = !1), n.pos + n.get("wsize") > n.scroll + n.clientSize - n.marginMax && (!t && e && u ? n.size = Math.min(n.size, n.get(f == "y" ? "fitsize" : "maxsize")) : n.get("wsize") < n.get("fitsize") ? n.pos = n.scroll + n.clientSize - n.marginMax - n.get("wsize") : (n.pos = n.scroll + n.marginMin, !t && u && (n.size = n.get(f == "y" ? "fitsize" : "maxsize")))), !t && n.size < n.minSize && (n.size = n.minSize, u = !1)) : n.justify == "max" && (n.pos = Math.floor(n.pos - n.size + n.t));
        n.pos < n.marginMin && (o = n.pos, n.pos = n.marginMin, u && !t && (n.size = n.size - (n.pos - o)))
    },
    correctRatio: function (n) {
        var i = this.x,
            t = this.y,
            f = !1,
            r = Math.min(i.full, i.size),
            u = Math.min(t.full, t.size),
            e = this.useBox || hs.padToMinWidth;
        r / u > n ? (r = u * n, r < i.minSize && (r = i.minSize, u = r / n), f = !0) : r / u < n && (u = r / n, f = !0);
        hs.padToMinWidth && i.full < i.minSize ? (i.imgSize = i.full, t.size = t.imgSize = t.full) : this.useBox ? (i.imgSize = r, t.imgSize = u) : (i.size = r, t.size = u);
        f = this.fitOverlayBox(this.useBox ? null : n, f);
        e && t.size < t.imgSize && (t.imgSize = t.size, i.imgSize = t.size * n);
        (f || e) && (i.pos = i.tpos - i.cb + i.tb, i.minSize = i.size, this.justify(i, !0), t.pos = t.tpos - t.cb + t.tb, t.minSize = t.size, this.justify(t, !0), this.overlayBox && this.sizeOverlayBox())
    },
    fitOverlayBox: function (n, t) {
        var r = this.x,
            i = this.y;
        if (this.overlayBox)
            while (i.size > this.minHeight && r.size > this.minWidth && i.get("wsize") > i.get("fitsize")) i.size -= 10, n && (r.size = i.size * n), this.sizeOverlayBox(0, 1), t = !0;
        return t
    },
    show: function () {
        var n = this.x,
            t = this.y;
        this.doShowHide("hidden");
        this.slideshow && this.slideshow.thumbstrip && this.slideshow.thumbstrip.selectThumb();
        this.changeSize(1, {
            wrapper: {
                width: n.get("wsize"),
                height: t.get("wsize"),
                left: n.pos,
                top: t.pos
            },
            content: {
                left: n.p1 + n.get("imgPad"),
                top: t.p1 + t.get("imgPad"),
                width: n.imgSize || n.size,
                height: t.imgSize || t.size
            }
        }, hs.expandDuration)
    },
    changeSize: function (n, t, i) {
        var e = this.transitions,
            h = n ? this.last ? this.last.a : null : hs.upcoming,
            s = e[1] && h && hs.getParam(h, "transitions")[1] == e[1] ? e[1] : e[0],
            c;
        if (this[s] && s != "expand") {
            this[s](n, t);
            return
        }
        this.outline && !this.outlineWhileAnimating && (n ? this.outline.setPosition() : this.outline.destroy());
        n || this.destroyOverlays();
        var r = this,
            u = r.x,
            f = r.y,
            o = this.easing;
        n || (o = this.easingClose || o);
        c = n ? function () {
            r.outline && (r.outline.table.style.visibility = "visible");
            setTimeout(function () {
                r.afterExpand()
            }, 50)
        } : function () {
            r.afterClose()
        };
        n && hs.setStyles(this.wrapper, {
            width: u.t + "px",
            height: f.t + "px"
        });
        this.fadeInOut && (hs.setStyles(this.wrapper, {
            opacity: n ? 0 : 1
        }), hs.extend(t.wrapper, {
            opacity: n
        }));
        hs.animate(this.wrapper, t.wrapper, {
            duration: i,
            easing: o,
            step: function (t, i) {
                if (r.outline && r.outlineWhileAnimating && i.prop == "top") {
                    var e = n ? i.pos : 1 - i.pos,
                        o = {
                            w: u.t + (u.get("wsize") - u.t) * e,
                            h: f.t + (f.get("wsize") - f.t) * e,
                            x: u.tpos + (u.pos - u.tpos) * e,
                            y: f.tpos + (f.pos - f.tpos) * e
                        };
                    r.outline.setPosition(o, 0, 1)
                }
            }
        });
        hs.animate(this.content, t.content, i, o, c);
        n && (this.wrapper.style.visibility = "visible", this.content.style.visibility = "visible", this.a.className += " highslide-active-anchor")
    },
    fade: function (n, t) {
        var i, r, u;
        if (this.outlineWhileAnimating = !1, i = this, r = n ? hs.expandDuration : 0, n && (hs.animate(this.wrapper, t.wrapper, 0), hs.setStyles(this.wrapper, {
            opacity: 0,
            visibility: "visible"
        }), hs.animate(this.content, t.content, 0), this.content.style.visibility = "visible", hs.animate(this.wrapper, {
            opacity: 1
        }, r, null, function () {
            i.afterExpand()
        })), this.outline) {
            this.outline.table.style.zIndex = this.wrapper.style.zIndex;
            var f = n || -1,
                e = this.outline.offset,
                o = n ? 3 : e,
                s = n ? e : 3;
            for (u = o; f * u <= f * s; u += f, r += 25) (function () {
                var t = n ? s - u : o - u;
                setTimeout(function () {
                    i.outline.setPosition(0, t, 1)
                }, r)
            })()
        }
        n || setTimeout(function () {
            i.outline && i.outline.destroy(i.preserveContent);
            i.destroyOverlays();
            hs.animate(i.wrapper, {
                opacity: 0
            }, hs.restoreDuration, null, function () {
                i.afterClose()
            })
        }, r)
    },
    crossfade: function (n) {
        var s, a, c;
        if (n) {
            var e = this,
                f = this.last,
                t = this.x,
                i = this.y,
                r = f.x,
                u = f.y,
                h = this.wrapper,
                l = this.content,
                o = this.overlayBox;
            hs.removeEventListener(document, "mousemove", hs.dragHandler);
            hs.setStyles(l, {
                width: (t.imgSize || t.size) + "px",
                height: (i.imgSize || i.size) + "px"
            });
            o && (o.style.overflow = "visible");
            this.outline = f.outline;
            this.outline && (this.outline.exp = e);
            f.outline = null;
            s = hs.createElement("div", {
                className: "highslide-" + this.contentType
            }, {
                position: "absolute",
                zIndex: 4,
                overflow: "hidden",
                display: "none"
            });
            a = {
                oldImg: f,
                newImg: this
            };
            for (c in a) this[c] = a[c].content.cloneNode(1), hs.setStyles(this[c], {
                position: "absolute",
                border: 0,
                visibility: "visible"
            }), s.appendChild(this[c]);
            h.appendChild(s);
            o && (o.className = "", h.appendChild(o));
            s.style.display = "";
            f.content.style.display = "none";
            hs.safari && hs.uaVersion < 525 && (this.wrapper.style.visibility = "visible");
            hs.animate(h, {
                width: t.size
            }, {
                duration: hs.transitionDuration,
                step: function (n, c) {
                    var v = c.pos,
                        p = 1 - v,
                        y, a = {},
                        w = ["pos", "size", "p1", "p2"];
                    for (var b in w) y = w[b], a["x" + y] = Math.round(p * r[y] + v * t[y]), a["y" + y] = Math.round(p * u[y] + v * i[y]), a.ximgSize = Math.round(p * (r.imgSize || r.size) + v * (t.imgSize || t.size)), a.ximgPad = Math.round(p * r.get("imgPad") + v * t.get("imgPad")), a.yimgSize = Math.round(p * (u.imgSize || u.size) + v * (i.imgSize || i.size)), a.yimgPad = Math.round(p * u.get("imgPad") + v * i.get("imgPad"));
                    e.outline && e.outline.setPosition({
                        x: a.xpos,
                        y: a.ypos,
                        w: a.xsize + a.xp1 + a.xp2 + 2 * t.cb,
                        h: a.ysize + a.yp1 + a.yp2 + 2 * i.cb
                    });
                    f.wrapper.style.clip = "rect(" + (a.ypos - u.pos) + "px, " + (a.xsize + a.xp1 + a.xp2 + a.xpos + 2 * r.cb - r.pos) + "px, " + (a.ysize + a.yp1 + a.yp2 + a.ypos + 2 * u.cb - u.pos) + "px, " + (a.xpos - r.pos) + "px)";
                    hs.setStyles(l, {
                        top: a.yp1 + i.get("imgPad") + "px",
                        left: a.xp1 + t.get("imgPad") + "px",
                        marginTop: i.pos - a.ypos + "px",
                        marginLeft: t.pos - a.xpos + "px"
                    });
                    hs.setStyles(h, {
                        top: a.ypos + "px",
                        left: a.xpos + "px",
                        width: a.xp1 + a.xp2 + a.xsize + 2 * t.cb + "px",
                        height: a.yp1 + a.yp2 + a.ysize + 2 * i.cb + "px"
                    });
                    hs.setStyles(s, {
                        width: (a.ximgSize || a.xsize) + "px",
                        height: (a.yimgSize || a.ysize) + "px",
                        left: a.xp1 + a.ximgPad + "px",
                        top: a.yp1 + a.yimgPad + "px",
                        visibility: "visible"
                    });
                    hs.setStyles(e.oldImg, {
                        top: u.pos - a.ypos + u.p1 - a.yp1 + u.get("imgPad") - a.yimgPad + "px",
                        left: r.pos - a.xpos + r.p1 - a.xp1 + r.get("imgPad") - a.ximgPad + "px"
                    });
                    hs.setStyles(e.newImg, {
                        opacity: v,
                        top: i.pos - a.ypos + i.p1 - a.yp1 + i.get("imgPad") - a.yimgPad + "px",
                        left: t.pos - a.xpos + t.p1 - a.xp1 + t.get("imgPad") - a.ximgPad + "px"
                    });
                    o && hs.setStyles(o, {
                        width: a.xsize + "px",
                        height: a.ysize + "px",
                        left: a.xp1 + t.cb + "px",
                        top: a.yp1 + i.cb + "px"
                    })
                },
                complete: function () {
                    h.style.visibility = l.style.visibility = "visible";
                    l.style.display = "block";
                    hs.discardElement(s);
                    e.afterExpand();
                    f.afterClose();
                    e.last = null
                }
            })
        }
    },
    reuseOverlay: function (n) {
        var t, i;
        if (!this.last) return !1;
        for (t = 0; t < this.last.overlays.length; t++)
            if (i = hs.$("hsId" + this.last.overlays[t]), i && i.hsId == n.hsId) return this.genOverlayBox(), i.reuse = this.key, hs.push(this.overlays, this.last.overlays[t]), !0;
        return !1
    },
    afterExpand: function () {
        this.isExpanded = !0;
        this.focus();
        this.dimmingOpacity && hs.dim(this);
        hs.upcoming && hs.upcoming == this.a && (hs.upcoming = null);
        this.prepareNextOutline();
        var n = hs.page,
            t = hs.mouse.x + n.scrollLeft,
            i = hs.mouse.y + n.scrollTop;
        this.mouseIsOver = this.x.pos < t && t < this.x.pos + this.x.get("wsize") && this.y.pos < i && i < this.y.pos + this.y.get("wsize");
        this.overlayBox && this.showOverlays()
    },
    prepareNextOutline: function () {
        var n = this.key,
            t = this.outlineType;
        new hs.Outline(t, function () {
            try {
                hs.expanders[n].preloadNext()
            } catch (t) { }
        })
    },
    preloadNext: function () {
        var n = this.getAdjacentAnchor(1),
            t;
        n && n.onclick.toString().match(/hs\.expand/) && (t = hs.createElement("img", {
            src: hs.getSrc(n)
        }))
    },
    getAdjacentAnchor: function (n) {
        var i = this.getAnchorIndex(),
            t = hs.anchors.groups[this.slideshowGroup || "none"];
        if (t && !t[i + n] && this.slideshow && this.slideshow.repeat) {
            if (n == 1) return t[0];
            if (n == -1) return t[t.length - 1]
        }
        return t && t[i + n] || null
    },
    getAnchorIndex: function () {
        var t = hs.getAnchors().groups[this.slideshowGroup || "none"],
            n;
        if (t)
            for (n = 0; n < t.length; n++)
                if (t[n] == this.a) return n;
        return null
    },
    getNumber: function () {
        var n, t;
        this[this.numberPosition] && (n = hs.anchors.groups[this.slideshowGroup || "none"], n && (t = hs.lang.number.replace("%1", this.getAnchorIndex() + 1).replace("%2", n.length), this[this.numberPosition].innerHTML = '<div class="highslide-number">' + t + "<\/div>" + this[this.numberPosition].innerHTML))
    },
    initSlideshow: function () {
        var t, i, n, r;
        if (this.last) this.slideshow = this.last.slideshow;
        else
            for (t = 0; t < hs.slideshows.length; t++) n = hs.slideshows[t], i = n.slideshowGroup, (typeof i == "undefined" || i === null || i === this.slideshowGroup) && (this.slideshow = new hs.Slideshow(this.key, n));
        (n = this.slideshow, n) && (r = n.expKey = this.key, n.checkFirstAndLast(), n.disable("full-expand"), n.controls && this.createOverlay(hs.extend(n.overlayOptions || {}, {
            overlayId: n.controls,
            hsId: "controls",
            zIndex: 5
        })), n.thumbstrip && n.thumbstrip.add(this), !this.last && this.autoplay && n.play(!0), n.autoplay && (n.autoplay = setTimeout(function () {
            hs.next(r)
        }, n.interval || 500)))
    },
    cancelLoading: function () {
        hs.discardElement(this.wrapper);
        hs.expanders[this.key] = null;
        hs.upcoming == this.a && (hs.upcoming = null);
        hs.undim(this.key);
        this.loading && (hs.loading.style.left = "-9999px")
    },
    writeCredits: function () {
        this.credits || (this.credits = hs.createElement("a", {
            href: hs.creditsHref,
            target: hs.creditsTarget,
            className: "highslide-credits",
            innerHTML: hs.lang.creditsText,
            title: hs.lang.creditsTitle
        }), this.createOverlay({
            overlayId: this.credits,
            position: this.creditsPosition || "top left",
            hsId: "credits"
        }))
    },
    getInline: function (types, addOverlay) {
        for (var type, s, next, o, x, i = 0; i < types.length; i++) {
            if (type = types[i], s = null, !this[type + "Id"] && this.thumbsUserSetId && (this[type + "Id"] = type + "-for-" + this.thumbsUserSetId), this[type + "Id"] && (this[type] = hs.getNode(this[type + "Id"])), !this[type] && !this[type + "Text"] && this[type + "Eval"]) try {
                s = eval(this[type + "Eval"])
            } catch (e) { }
            if (!this[type] && this[type + "Text"] && (s = this[type + "Text"]), !this[type] && !s && (this[type] = hs.getNode(this.a["_" + type + "Id"]), !this[type]))
                for (next = this.a.nextSibling; next && !hs.isHsAnchor(next) ;) {
                    if (new RegExp("highslide-" + type).test(next.className || null)) {
                        next.id || (this.a["_" + type + "Id"] = next.id = "hsId" + hs.idCounter++);
                        this[type] = hs.getNode(next.id);
                        break
                    }
                    next = next.nextSibling
                }
            if (this[type] || s || this.numberPosition != type || (s = "\n"), !this[type] && s && (this[type] = hs.createElement("div", {
                className: "highslide-" + type,
                innerHTML: s
            })), addOverlay && this[type]) {
                o = {
                    position: type == "heading" ? "above" : "below"
                };
                for (x in this[type + "Overlay"]) o[x] = this[type + "Overlay"][x];
                o.overlayId = this[type];
                this.createOverlay(o)
            }
        }
    },
    doShowHide: function (n) {
        hs.hideSelects && this.showHideElements("SELECT", n);
        hs.hideIframes && this.showHideElements("IFRAME", n);
        hs.geckoMac && this.showHideElements("*", n)
    },
    showHideElements: function (n, t) {
        for (var u, f, s, h, o, r = document.getElementsByTagName(n), e = n == "*" ? "overflow" : "visibility", i = 0; i < r.length; i++) (e == "visibility" || document.defaultView.getComputedStyle(r[i], "").getPropertyValue("overflow") == "auto" || r[i].getAttribute("hidden-by") != null) && (u = r[i].getAttribute("hidden-by"), t == "visible" && u ? (u = u.replace("[" + this.key + "]", ""), r[i].setAttribute("hidden-by", u), u || (r[i].style[e] = r[i].origProp)) : t == "hidden" && (f = hs.getPosition(r[i]), f.w = r[i].offsetWidth, f.h = r[i].offsetHeight, this.dimmingOpacity || (s = f.x + f.w < this.x.get("opos") || f.x > this.x.get("opos") + this.x.get("osize"), h = f.y + f.h < this.y.get("opos") || f.y > this.y.get("opos") + this.y.get("osize")), o = hs.getWrapperKey(r[i]), s || h || o == this.key ? (u == "[" + this.key + "]" || hs.focusKey == o) && o != this.key ? (r[i].setAttribute("hidden-by", ""), r[i].style[e] = r[i].origProp || "") : u && u.indexOf("[" + this.key + "]") > -1 && r[i].setAttribute("hidden-by", u.replace("[" + this.key + "]", "")) : u ? u.indexOf("[" + this.key + "]") == -1 && r[i].setAttribute("hidden-by", u + "[" + this.key + "]") : (r[i].setAttribute("hidden-by", "[" + this.key + "]"), r[i].origProp = r[i].style[e], r[i].style[e] = "hidden")))
    },
    focus: function () {
        var n, t;
        for (this.wrapper.style.zIndex = hs.zIndexCounter += 2, n = 0; n < hs.expanders.length; n++) hs.expanders[n] && n == hs.focusKey && (t = hs.expanders[n], t.content.className += " highslide-" + t.contentType + "-blur", t.content.style.cursor = hs.ieLt7 ? "hand" : "pointer", t.content.title = hs.lang.focusTitle);
        this.outline && (this.outline.table.style.zIndex = this.wrapper.style.zIndex - 1);
        this.content.className = "highslide-" + this.contentType;
        this.content.title = hs.lang.restoreTitle;
        hs.restoreCursor && (hs.styleRestoreCursor = window.opera ? "pointer" : "url(" + hs.graphicsDir + hs.restoreCursor + "), pointer", hs.ieLt7 && hs.uaVersion < 6 && (hs.styleRestoreCursor = "hand"), this.content.style.cursor = hs.styleRestoreCursor);
        hs.focusKey = this.key;
        hs.addEventListener(document, window.opera ? "keypress" : "keydown", hs.keyHandler)
    },
    moveTo: function (n, t) {
        this.x.setPos(n);
        this.y.setPos(t)
    },
    resize: function (n) {
        var t, i, r = n.width / n.height;
        t = Math.max(n.width + n.dX, Math.min(this.minWidth, this.x.full));
        this.isImage && Math.abs(t - this.x.full) < 12 && (t = this.x.full);
        i = t / r;
        i < Math.min(this.minHeight, this.y.full) && (i = Math.min(this.minHeight, this.y.full), this.isImage && (t = i * r));
        this.resizeTo(t, i)
    },
    resizeTo: function (n, t) {
        this.y.setSize(t);
        this.x.setSize(n);
        this.wrapper.style.height = this.y.get("wsize") + "px"
    },
    close: function () {
        if (!this.isClosing && this.isExpanded) {
            this.transitions[1] == "crossfade" && hs.upcoming && (hs.getExpander(hs.upcoming).cancelLoading(), hs.upcoming = null);
            this.isClosing = !0;
            this.slideshow && !hs.upcoming && this.slideshow.pause();
            hs.removeEventListener(document, window.opera ? "keypress" : "keydown", hs.keyHandler);
            try {
                this.content.style.cursor = "default";
                this.changeSize(0, {
                    wrapper: {
                        width: this.x.t,
                        height: this.y.t,
                        left: this.x.tpos - this.x.cb + this.x.tb,
                        top: this.y.tpos - this.y.cb + this.y.tb
                    },
                    content: {
                        left: 0,
                        top: 0,
                        width: this.x.t,
                        height: this.y.t
                    }
                }, hs.restoreDuration)
            } catch (n) {
                this.afterClose()
            }
        }
    },
    createOverlay: function (n) {
        var i = n.overlayId,
            u = n.relativeTo == "viewport" && !/panel$/.test(n.position),
            r, t;
        (typeof i == "string" && (i = hs.getNode(i)), n.html && (i = hs.createElement("div", {
            innerHTML: n.html
        })), i && typeof i != "string") && ((i.style.display = "block", n.hsId = n.hsId || n.overlayId, this.transitions[1] == "crossfade" && this.reuseOverlay(n, i)) || (this.genOverlayBox(), r = n.width && /^[0-9]+(px|%)$/.test(n.width) ? n.width : "auto", /^(left|right)panel$/.test(n.position) && !/^[0-9]+px$/.test(n.width) && (r = "200px"), t = hs.createElement("div", {
            id: "hsId" + hs.idCounter++,
            hsId: n.hsId
        }, {
            position: "absolute",
            visibility: "hidden",
            width: r,
            direction: hs.lang.cssDirection || "",
            opacity: 0
        }, u ? hs.viewport : this.overlayBox, !0), u && (t.hsKey = this.key), t.appendChild(i), hs.extend(t, {
            opacity: 1,
            offsetX: 0,
            offsetY: 0,
            dur: n.fade === 0 || n.fade === !1 || n.fade == 2 && hs.ie ? 0 : 250
        }), hs.extend(t, n), this.gotOverlays && (this.positionOverlay(t), (!t.hideOnMouseOut || this.mouseIsOver) && hs.animate(t, {
            opacity: t.opacity
        }, t.dur)), hs.push(this.overlays, hs.idCounter - 1)))
    },
    positionOverlay: function (n) {
        var t = n.position || "middle center",
            f = n.relativeTo == "viewport",
            i = n.offsetX,
            r = n.offsetY,
            u;
        f ? (hs.viewport.style.display = "block", n.hsKey = this.key, n.offsetWidth > n.parentNode.offsetWidth && (n.style.width = "100%")) : n.parentNode != this.overlayBox && this.overlayBox.appendChild(n);
        /left$/.test(t) && (n.style.left = i + "px");
        /center$/.test(t) && hs.setStyles(n, {
            left: "50%",
            marginLeft: i - Math.round(n.offsetWidth / 2) + "px"
        });
        /right$/.test(t) && (n.style.right = -i + "px");
        /^leftpanel$/.test(t) ? (hs.setStyles(n, {
            right: "100%",
            marginRight: this.x.cb + "px",
            top: -this.y.cb + "px",
            bottom: -this.y.cb + "px",
            overflow: "auto"
        }), this.x.p1 = n.offsetWidth) : /^rightpanel$/.test(t) && (hs.setStyles(n, {
            left: "100%",
            marginLeft: this.x.cb + "px",
            top: -this.y.cb + "px",
            bottom: -this.y.cb + "px",
            overflow: "auto"
        }), this.x.p2 = n.offsetWidth);
        u = n.parentNode.offsetHeight;
        n.style.height = "auto";
        f && n.offsetHeight > u && (n.style.height = hs.ieLt7 ? u + "px" : "100%");
        /^top/.test(t) && (n.style.top = r + "px");
        /^middle/.test(t) && hs.setStyles(n, {
            top: "50%",
            marginTop: r - Math.round(n.offsetHeight / 2) + "px"
        });
        /^bottom/.test(t) && (n.style.bottom = -r + "px");
        /^above$/.test(t) ? (hs.setStyles(n, {
            left: -this.x.p1 - this.x.cb + "px",
            right: -this.x.p2 - this.x.cb + "px",
            bottom: "100%",
            marginBottom: this.y.cb + "px",
            width: "auto"
        }), this.y.p1 = n.offsetHeight) : /^below$/.test(t) && (hs.setStyles(n, {
            position: "relative",
            left: -this.x.p1 - this.x.cb + "px",
            right: -this.x.p2 - this.x.cb + "px",
            top: "100%",
            marginTop: this.y.cb + "px",
            width: "auto"
        }), this.y.p2 = n.offsetHeight, n.style.position = "absolute")
    },
    getOverlays: function () {
        var i, t, n;
        for (this.getInline(["heading", "caption"], !0), this.getNumber(), this.heading && this.dragByHeading && (this.heading.className += " highslide-move"), hs.showCredits && this.writeCredits(), n = 0; n < hs.overlays.length; n++) {
            var t = hs.overlays[n],
                r = t.thumbnailId,
                u = t.slideshowGroup;
            (!r && !u || r && r == this.thumbsUserSetId || u && u === this.slideshowGroup) && this.createOverlay(t)
        }
        for (i = [], n = 0; n < this.overlays.length; n++) t = hs.$("hsId" + this.overlays[n]), /panel$/.test(t.position) ? this.positionOverlay(t) : hs.push(i, t);
        for (n = 0; n < i.length; n++) this.positionOverlay(i[n]);
        this.gotOverlays = !0
    },
    genOverlayBox: function () {
        this.overlayBox || (this.overlayBox = hs.createElement("div", {
            className: this.wrapperClassName
        }, {
            position: "absolute",
            width: (this.x.size || (this.useBox ? this.width : null) || this.x.full) + "px",
            height: (this.y.size || this.y.full) + "px",
            visibility: "hidden",
            overflow: "hidden",
            zIndex: hs.ie ? 4 : "auto"
        }, hs.container, !0))
    },
    sizeOverlayBox: function (n, t) {
        var u = this.overlayBox,
            f = this.x,
            r = this.y,
            e, i, o;
        if (hs.setStyles(u, {
            width: f.size + "px",
            height: r.size + "px"
        }), n || t)
            for (e = 0; e < this.overlays.length; e++) i = hs.$("hsId" + this.overlays[e]), o = hs.ieLt7 || document.compatMode == "BackCompat", i && /^(above|below)$/.test(i.position) && (o && (i.style.width = u.offsetWidth + 2 * f.cb + f.p1 + f.p2 + "px"), r[i.position == "above" ? "p1" : "p2"] = i.offsetHeight), i && o && /^(left|right)panel$/.test(i.position) && (i.style.height = u.offsetHeight + 2 * r.cb + "px");
        n && (hs.setStyles(this.content, {
            top: r.p1 + "px"
        }), hs.setStyles(u, {
            top: r.p1 + r.cb + "px"
        }))
    },
    showOverlays: function () {
        var t = this.overlayBox,
            i, n;
        for (t.className = "", hs.setStyles(t, {
            top: this.y.p1 + this.y.cb + "px",
            left: this.x.p1 + this.x.cb + "px",
            overflow: "visible"
        }), hs.safari && (t.style.visibility = "visible"), this.wrapper.appendChild(t), i = 0; i < this.overlays.length; i++) n = hs.$("hsId" + this.overlays[i]), n.style.zIndex = n.zIndex || 4, (!n.hideOnMouseOut || this.mouseIsOver) && (n.style.visibility = "visible", hs.setStyles(n, {
            visibility: "visible",
            display: ""
        }), hs.animate(n, {
            opacity: n.opacity
        }, n.dur))
    },
    destroyOverlays: function () {
        var n, i, t;
        if (this.overlays.length) {
            for (this.slideshow && (n = this.slideshow.controls, n && hs.getExpander(n) == this && n.parentNode.removeChild(n)), i = 0; i < this.overlays.length; i++) t = hs.$("hsId" + this.overlays[i]), t && t.parentNode == hs.viewport && hs.getExpander(t) == this && hs.discardElement(t);
            hs.discardElement(this.overlayBox)
        }
    },
    createFullExpand: function () {
        if (this.slideshow && this.slideshow.controls) {
            this.slideshow.enable("full-expand");
            return
        }
        this.fullExpandLabel = hs.createElement("a", {
            href: "javascript:hs.expanders[" + this.key + "].doFullExpand();",
            title: hs.lang.fullExpandTitle,
            className: "highslide-full-expand"
        });
        this.createOverlay({
            overlayId: this.fullExpandLabel,
            position: hs.fullExpandPosition,
            hideOnMouseOut: !0,
            opacity: hs.fullExpandOpacity
        })
    },
    doFullExpand: function () {
        var i, r, n, t;
        try {
            this.fullExpandLabel && hs.discardElement(this.fullExpandLabel);
            this.focus();
            i = this.x.size;
            r = this.y.size;
            this.resizeTo(this.x.full, this.y.full);
            n = this.x.pos - (this.x.size - i) / 2;
            n < hs.marginLeft && (n = hs.marginLeft);
            t = this.y.pos - (this.y.size - r) / 2;
            t < hs.marginTop && (t = hs.marginTop);
            this.moveTo(n, t);
            this.doShowHide("hidden")
        } catch (u) {
            this.error(u)
        }
    },
    afterClose: function () {
        this.a.className = this.a.className.replace("highslide-active-anchor", "");
        this.doShowHide("visible");
        this.outline && this.outlineWhileAnimating && this.outline.destroy();
        hs.discardElement(this.wrapper);
        this.destroyOverlays();
        hs.viewport.childNodes.length || (hs.viewport.style.display = "none");
        this.dimmingOpacity && hs.undim(this.key);
        hs.expanders[this.key] = null;
        hs.reOrder()
    }
}, hs.Slideshow = function (n, t) {
    hs.dynamicallyUpdateAnchors !== !1 && hs.updateAnchors();
    this.expKey = n;
    for (var i in t) this[i] = t[i];
    this.useControls && this.getControls();
    this.thumbstrip && (this.thumbstrip = hs.Thumbstrip(this))
}, hs.Slideshow.prototype = {
    getControls: function () {
        var t, i, n;
        for (this.controls = hs.createElement("div", {
            innerHTML: hs.replaceLang(hs.skin.controls)
        }, null, hs.container), t = ["play", "pause", "previous", "next", "move", "full-expand", "close"], this.btn = {}, i = this, n = 0; n < t.length; n++) this.btn[t[n]] = hs.getElementByClass(this.controls, "li", "highslide-" + t[n]), this.enable(t[n]);
        this.btn.pause.style.display = "none"
    },
    checkFirstAndLast: function () {
        if (!this.repeat && this.controls) {
            var n = hs.expanders[this.expKey],
                t = n.getAnchorIndex(),
                i = /disabled$/;
            t == 0 ? this.disable("previous") : i.test(this.btn.previous.getElementsByTagName("a")[0].className) && this.enable("previous");
            t + 1 == hs.anchors.groups[n.slideshowGroup || "none"].length ? (this.disable("next"), this.disable("play")) : i.test(this.btn.next.getElementsByTagName("a")[0].className) && (this.enable("next"), this.enable("play"))
        }
    },
    enable: function (n) {
        if (this.btn) {
            var r = this,
                t = this.btn[n].getElementsByTagName("a")[0],
                i = /disabled$/;
            t.onclick = function () {
                return r[n](), !1
            };
            i.test(t.className) && (t.className = t.className.replace(i, ""))
        }
    },
    disable: function (n) {
        if (this.btn) {
            var t = this.btn[n].getElementsByTagName("a")[0];
            t.onclick = function () {
                return !1
            };
            /disabled$/.test(t.className) || (t.className += " disabled")
        }
    },
    hitSpace: function () {
        this.autoplay ? this.pause() : this.play()
    },
    play: function (n) {
        this.btn && (this.btn.play.style.display = "none", this.btn.pause.style.display = "");
        this.autoplay = !0;
        n || hs.next(this.expKey)
    },
    pause: function () {
        this.btn && (this.btn.pause.style.display = "none", this.btn.play.style.display = "");
        clearTimeout(this.autoplay);
        this.autoplay = null
    },
    previous: function () {
        this.pause();
        hs.previous(this.btn.previous)
    },
    next: function () {
        this.pause();
        hs.next(this.btn.next)
    },
    move: function () { },
    "full-expand": function () {
        hs.getExpander().doFullExpand()
    },
    close: function () {
        hs.close(this.btn.close)
    }
}, hs.Thumbstrip = function (n) {
    function d(n) {
        hs.extend(u || {}, {
            overlayId: r,
            hsId: "thumbstrip",
            className: "highslide-thumbstrip-" + o + "-overlay " + (u.className || "")
        });
        hs.ieLt7 && (u.fade = 0);
        n.createOverlay(u);
        hs.setStyles(r.parentNode, {
            overflow: "hidden"
        })
    }

    function h(n) {
        l(undefined, Math.round(n * r[t ? "offsetWidth" : "offsetHeight"] * .7))
    }

    function l(i, u) {
        var o, g, nt, tt;
        if (i === undefined)
            for (o = 0; o < e.length; o++)
                if (e[o] == hs.expanders[n.expKey].a) {
                    i = o;
                    break
                }
        if (i !== undefined) {
            var s = r.getElementsByTagName("a"),
                it = s[i],
                l = it.parentNode,
                rt = t ? "Left" : "Top",
                ft = t ? "Right" : "Bottom",
                ut = t ? "Width" : "Height",
                b = "offset" + rt,
                h = "offset" + ut,
                d = v.parentNode.parentNode[h],
                a = d - c[h],
                k = parseInt(c.style[t ? "left" : "top"]) || 0,
                f = k;
            if (u !== undefined) f = k - u, a > 0 && (a = 0), f > 0 && (f = 0), f < a && (f = a);
            else {
                for (o = 0; o < s.length; o++) s[o].className = "";
                it.className = "highslide-active-anchor";
                g = i > 0 ? s[i - 1].parentNode[b] : l[b];
                nt = l[b] + l[h] + (s[i + 1] ? s[i + 1].parentNode[h] : 0);
                nt > d - k ? f = d - nt : g < -k && (f = -g)
            }
            tt = l[b] + (l[h] - w[h]) / 2 + f;
            hs.animate(c, t ? {
                left: f
            } : {
                top: f
            }, null, "easeOutQuad");
            hs.animate(w, t ? {
                left: tt
            } : {
                top: tt
            }, null, "easeOutQuad");
            y.style.display = f < 0 ? "block" : "none";
            p.style.display = f > a ? "block" : "none"
        }
    }
    for (var e = hs.anchors.groups[hs.expanders[n.expKey].slideshowGroup || "none"], u = n.thumbstrip, o = u.mode || "horizontal", a = o == "float", i = a ? ["div", "ul", "li", "span"] : ["table", "tbody", "tr", "td"], t = o == "horizontal", r = hs.createElement("div", {
        className: "highslide-thumbstrip highslide-thumbstrip-" + o,
        innerHTML: '<div class="highslide-thumbstrip-inner"><' + i[0] + "><" + i[1] + "><\/" + i[1] + "><\/" + i[0] + '><\/div><div class="highslide-scroll-up"><div><\/div><\/div><div class="highslide-scroll-down"><div><\/div><\/div><div class="highslide-marker"><div><\/div><\/div>'
    }, {
        display: "none"
    }, hs.container), s = r.childNodes, v = s[0], y = s[1], p = s[2], w = s[3], c = v.firstChild, b = r.getElementsByTagName(i[1])[0], k, f = 0; f < e.length; f++) f != 0 && t || (k = hs.createElement(i[2], null, null, b)),
        function () {
            var n = e[f],
                t = hs.createElement(i[3], null, null, k),
                r = f;
            hs.createElement("a", {
                href: n.href,
                title: n.title,
                onclick: function () {
                    return /highslide-active-anchor/.test(this.className) ? !1 : (hs.getExpander(this).focus(), hs.transit(n))
                },
                innerHTML: hs.stripItemFormatter ? hs.stripItemFormatter(n) : n.innerHTML
            }, null, t)
        }();
    return a || (y.onclick = function () {
        h(-1)
    }, p.onclick = function () {
        h(1)
    }, hs.addEventListener(b, document.onmousewheel !== undefined ? "mousewheel" : "DOMMouseScroll", function (n) {
        var t = 0;
        n = n || window.event;
        n.wheelDelta ? (t = n.wheelDelta / 120, hs.opera && (t = -t)) : n.detail && (t = -n.detail / 3);
        t && h(-t * .2);
        n.preventDefault && n.preventDefault();
        n.returnValue = !1
    })), {
        add: d,
        selectThumb: l
    }
}, hs.langDefaults = hs.lang, HsExpander = hs.Expander, hs.ie && window == window.top && function () {
    try {
        document.documentElement.doScroll("left")
    } catch (n) {
        setTimeout(arguments.callee, 50);
        return
    }
    hs.ready()
}(), hs.addEventListener(document, "DOMContentLoaded", hs.ready), hs.addEventListener(window, "load", hs.ready), hs.addEventListener(document, "ready", function () {
    if (hs.expandCursor || hs.dimmingOpacity) {
        var r = hs.createElement("style", {
            type: "text/css"
        }, null, document.getElementsByTagName("HEAD")[0]),
            t = document.compatMode == "BackCompat";

        function i(n, i) {
            if (hs.ie && (hs.uaVersion < 9 || t)) {
                var u = document.styleSheets[document.styleSheets.length - 1];
                typeof u.addRule == "object" && u.addRule(n, i)
            } else r.appendChild(document.createTextNode(n + " {" + i + "}"))
        }

        function n(n) {
            return "expression( ( ( ignoreMe = document.documentElement." + n + " ? document.documentElement." + n + " : document.body." + n + " ) ) + 'px' );"
        }
        hs.expandCursor && i(".highslide img", "cursor: url(" + hs.graphicsDir + hs.expandCursor + "), pointer !important;");
        i(".highslide-viewport-size", hs.ie && (hs.uaVersion < 7 || t) ? "position: absolute; left:" + n("scrollLeft") + "top:" + n("scrollTop") + "width:" + n("clientWidth") + "height:" + n("clientHeight") : "position: fixed; width: 100%; height: 100%; left: 0; top: 0")
    }
}), hs.addEventListener(window, "resize", function () {
    var n, t, i;
    if (hs.getPageSize(), hs.viewport)
        for (n = 0; n < hs.viewport.childNodes.length; n++) t = hs.viewport.childNodes[n], i = hs.getExpander(t), i.positionOverlay(t), t.hsId == "thumbstrip" && i.slideshow.thumbstrip.selectThumb()
}), hs.addEventListener(document, "mousemove", function (n) {
    hs.mouse = {
        x: n.clientX,
        y: n.clientY
    }
}), hs.addEventListener(document, "mousedown", hs.mouseClickHandler), hs.addEventListener(document, "mouseup", hs.mouseClickHandler), hs.addEventListener(document, "ready", hs.getAnchors), hs.addEventListener(window, "load", hs.preloadImages));